// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore;
using PetsHome.Common.AppPetshomeDbContext;
using PetsHome.Common.Entities;
using System;

namespace PetsHome.Common.AppPetshomeDbContext.Configurations
{
    public partial class tbHistorialMedicoConfiguration : IEntityTypeConfiguration<tbHistorialMedico>
    {
        public void Configure(EntityTypeBuilder<tbHistorialMedico> entity)
        {
            entity.HasKey(e => e.medic_Id)
                .HasName("PK__tbFichas__ED72D1BD2F24864F");

            entity.ToTable("tbHistorialMedico", "Refugio");

            entity.Property(e => e.medic_Id).HasComment("Identificador único de la tabla HistorialMedico.");

            entity.Property(e => e.masc_Id).HasComment("Identificador de la mascota.");

            entity.Property(e => e.medic_Comportamiento)
                .HasMaxLength(255)
                .HasComment("Indica el tipo de comportamiento tiene la mascota con las personas.");

            entity.Property(e => e.medic_EsEliminado).HasComment("Indica si el registro está desactivado permanentemente.");

            entity.Property(e => e.medic_Esterilizacion).HasComment("Indica si la mascota esta esterilizada.");

            entity.Property(e => e.medic_FechaCrea)
                .HasColumnType("datetime")
                .HasComment("Registra la fecha en que se creó el registro.");

            entity.Property(e => e.medic_FechaModifica)
                .HasColumnType("datetime")
                .HasComment("Registra la última fecha en que se modificó el registro.");

            entity.Property(e => e.medic_InformacionAdicional)
                .HasMaxLength(255)
                .HasComment("Descripción sobre comentario de parte del medico.");

            entity.Property(e => e.medic_SaludCuidado)
                .HasMaxLength(255)
                .HasComment("Indica el nivel de salud en la que se encuentra.");

            entity.Property(e => e.medic_UsuarioCrea).HasComment("Indica el identificador del usuario que creó el registro.");

            entity.Property(e => e.medic_UsuarioModifica).HasComment("Indica el identificador del último usuario que modificó el registro.");

            entity.HasOne(d => d.masc)
                .WithMany(p => p.tbHistorialMedico)
                .HasForeignKey(d => d.masc_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tbHistorialMedico_tbMascotas_refg_Id");

            entity.HasOne(d => d.medic_UsuarioCreaNavigation)
                .WithMany(p => p.tbHistorialMedico)
                .HasForeignKey(d => d.medic_UsuarioCrea)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Refugio_tbHistorialMedico_tbUsuarios_usu_Id");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<tbHistorialMedico> entity);
    }
}
